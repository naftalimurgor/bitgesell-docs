"use strict";(self.webpackChunkbitgesell_docs=self.webpackChunkbitgesell_docs||[]).push([[2617],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(r),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4194:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:6},l="Setup a Full Node via Docker",i={unversionedId:"full-node/set-up-full-node-via-docker",id:"full-node/set-up-full-node-via-docker",title:"Setup a Full Node via Docker",description:"Let's learn how to set up a full node via Docker for easier deployments",source:"@site/docs/full-node/set-up-full-node-via-docker.md",sourceDirName:"full-node",slug:"/full-node/set-up-full-node-via-docker",permalink:"/docs/full-node/set-up-full-node-via-docker",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/full-node/set-up-full-node-via-docker.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Setting up the client on Windows",permalink:"/docs/full-node/settting-up-client-on-windows"},next:{title:"SDKs - Build on  Bitgesell",permalink:"/docs/category/sdks---build-on--bitgesell"}},c={},s=[{value:"Requirements",id:"requirements",level:2},{value:"Really Fast Quick Start",id:"really-fast-quick-start",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Documentation",id:"documentation",level:2}],u={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"setup-a-full-node-via-docker"},"Setup a Full Node via Docker"),(0,a.kt)("p",null,"Let's learn how to set up a full node via Docker for easier deployments"),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Physical machine, cloud instance, or VPS that supports Docker i.e. Vultr, Digital Ocean, KVM or XEN based VMs) running Ubuntu 18.04 or later")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"At least 10 GB to store the block chain files (and always growing!)")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"At least 500 MB + 1 GB swap file"))),(0,a.kt)("h2",{id:"really-fast-quick-start"},"Really Fast Quick Start"),(0,a.kt)("p",null,"One liner for Ubuntu 20.04 LTS machines with JSON-RPC enabled on localhost and adds upstart init script:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"curl https://raw.githubusercontent.com/naftalimurgor/bgld-docker/master/bootstrap-host.sh | sh\n")),(0,a.kt)("h2",{id:"quick-start"},"Quick Start"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run an instance of Bitegesell node as follows:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker run -dp 8454:8454 naftalimurgor/bgld\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Verify that the container is running and bgld node is downloading the blockchain"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'$ docker ps\nCONTAINER ID   IMAGE                COMMAND   CREATED         STATUS         PORTS                                                 NAMES\n304e5a74a539   naftalimurgor/bgld   "BGLd"    5 seconds ago   Up 3 seconds   0.0.0.0:8454->8454/tcp, :::8454->8454/tcp, 8455/tcp   naughty_greider\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"You can then access the daemon's output thanks to the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/reference/commandline/cli/#logs"},"docker logs command")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"docker logs -f bgld\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install optional init scripts for upstart and systemd are in the ",(0,a.kt)("inlineCode",{parentName:"p"},"init")," directory."))),(0,a.kt)("h2",{id:"documentation"},"Documentation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Additional documentation in the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/naftalimurgor/bgld-docker/tree/main/docs"},"docs folder"),".")))}d.isMDXComponent=!0}}]);